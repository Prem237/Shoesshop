{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CollegeName","name","depart","print","this","App","clgname","useState","Toggle","ABCD","displayContent","onClick","className","banner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Application","msg","React","Component","Header","props","Neww","e","preventDefault","click","target","elements","value","alert","onSubmit","page","type","Increment","increase","bind","state","count","setState","prevstate","ReactDOM","render","document","getElementById","StrictMode"],"mappings":"8OAYMA,E,kDAEN,WAAYC,EAAKC,GAChB,IAAD,8BACA,cAAMA,IACDD,KAAKA,EAFV,E,qDAME,IAAIE,EAAM,mEAEV,OADAA,GAAO,uBAAuBC,KAAKH,S,cAnBnC,WAAYC,GACX,oBACAE,KAAKF,OAAOA,E,yDAIX,MAAO,qBAAqBE,KAAKF,W,MA+CtBG,MA5Bf,WAEI,IAAMC,EAAS,IAAIN,EAAY,MAAM,OAF1B,EAGWO,oBAAS,GAHpB,mBAGJC,EAHI,KAGGC,EAHH,KASPC,EAAiB,OAKrB,OAJIF,IACFE,EAAiB,IAKnB,gCACE,wBAAQC,QAZY,WAEpBF,GADqBD,IAWrB,oBACA,qBAAKI,UAAU,UAAf,SACGF,IAEAJ,EAAQO,aCrCFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFRQ,E,uKAMF,OACA,gCACE,cAAC,EAAD,CAAQC,IAHE,mBAIV,cAAC,EAAD,W,GAToBC,IAAMC,WAc1BC,E,uKAIF,OACA,gCACE,oDACA,6BAAKvB,KAAKwB,MAAMJ,a,GAPDC,IAAMC,WAYrBG,E,mKAECC,GAEHA,EAAEC,iBACF,IAAMC,EAAMF,EAAEG,OAAOC,SAASF,MAAMG,MACjCH,GAEDI,MAAMJ,K,+BAKR,OACA,8BACE,uBAAMK,SAAUjC,KAAKkC,KAArB,UACE,uBAAOC,KAAK,OAAOtC,KAAK,UACxB,wD,GAjBWwB,IAAMC,WAwBnBc,E,kDAEJ,WAAYZ,GACX,IAAD,8BACE,cAAMA,IACDa,SAAS,EAAKA,SAASC,KAAd,gBACd,EAAKC,MAAM,CACTC,MAAO,GAJX,E,uDASExC,KAAKyC,UAAS,SAACC,GACb,MAAM,CACJF,MAAME,EAAUF,MAAO,Q,+BAM3B,OACE,gCACE,wCAAWxC,KAAKuC,MAAMC,SACtB,wBAAQjC,QAASP,KAAKqC,SAAtB,wB,GAvBgBhB,IAAMC,WA4B9BqB,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,SACxDH,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,UACtDH,IAASC,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAEFF,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.8250a2b6.chunk.js","sourcesContent":["import { useState } from \"react\";\nclass College\n{\n  constructor(depart)\n  {\n   this.depart=depart;\n  }\n  getCollege()\n  {\n    return \"MY department is: \"+this.depart;\n  }\n}\nclass CollegeName extends College \n{\nconstructor(name,depart)\n{\nsuper(depart);\nthis.name=name;\n}\nbanner()\n{\n  let print=super.getCollege();\n  print+=\" My college name is:\"+this.name;\n  return print;\n}\n\n}\n\nfunction App() {\n\n    const clgname= new CollegeName(\"MEC\",\"ECE\");\n    const [Toggle,ABCD] = useState(true);\n\n    const toggleHandler = () => {\n      const presentState = Toggle;\n      ABCD(!presentState);\n    }\n    let displayContent = \"Open\";\n    if (Toggle) {\n      displayContent = \"\";\n    }\n \n    return (\n\n    <div>\n      <button onClick={toggleHandler}>Toggle</button>\n      <div className=\"content\">\n        {displayContent}\n      </div>\n      {  clgname.banner()}\n    </div>\n  );\n    }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nclass Application extends React.Component\n{\n  \n  render()\n  {\n    const value=\"Details here!!\";\n    return(\n    <div>\n      <Header msg={value}/>\n      <Neww />\n    </div>\n    );\n  }\n}\nclass Header extends React.Component\n{\n  render()\n  {\n    return(\n    <div>\n      <h1>WELCOME TO ALL!!!!</h1>\n      <h2>{this.props.msg}</h2>\n    </div>\n    );\n  }\n}\nclass Neww extends React.Component\n{\n  page(e)\n  {\n    e.preventDefault();\n    const click=e.target.elements.click.value;\n    if(click)\n    {\n      alert(click);\n    }\n  }\n  render()\n  {\n    return(\n    <div>\n      <form onSubmit={this.page}>\n        <input type=\"text\" name=\"click\" ></input>\n        <button>add Alert</button> \n      </form>\n    </div>\n    );\n  }\n}\n\nclass Increment extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.increase=this.increase.bind(this);\n    this.state={\n      count: 0\n    };\n  }\n  increase()\n  {\n    this.setState((prevstate)=>{\n      return{\n        count:prevstate.count +1\n      };\n    });\n  }\n  render()\n  {\n    return(\n      <div>\n        <h2>count:{this.state.count}</h2>\n        <button onClick={this.increase} >Add</button>\n      </div>\n    );\n  }\n}\nReactDOM.render(<Application />,document.getElementById('root'));\nReactDOM.render(<Increment />,document.getElementById('root1'));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('king')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}